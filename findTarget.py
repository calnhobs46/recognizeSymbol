def findTarget(target,scene):    #Importing Python Libraries    import numpy    import PIL.Image as img    import PIL.ImageDraw as imgd    import matplotlib.pyplot as mplt    import cv2    import scipy.ndimage as ndi    #from matplotlib.cm import *#Grayscale of Images    trgt=numpy.array(img.open(target).convert("L"))    scne=img.open(scene)    gssc=numpy.array(scne.convert("L"))    #mplt.imshow(arsn, origin="lower",cmap=Greys_r); mplt.show()   #inverse binary image from grayscale    (thresh, bintr)=cv2.threshold(trgt,128,255,cv2.THRESH_BINARY_INV| cv2.THRESH_OTSU)    bintr=cv2.threshold(trgt,thresh,255,cv2.THRESH_BINARY_INV)[1]    (thresh, binsc)=cv2.threshold(gssc,128,255,cv2.THRESH_BINARY_INV| cv2.THRESH_OTSU)    binsc=cv2.threshold(gssc,thresh,255,cv2.THRESH_BINARY_INV)[1]#morphology    ero=ndi.binary_erosion(bintr)    ero=ndi.binary_erosion(ero)    dil=ndi.binary_dilation(ero)    mtrg=ndi.binary_dilation(dil)    ero=ndi.binary_erosion(binsc)    ero=ndi.binary_erosion(ero)    dil=ndi.binary_dilation(ero)    msce=ndi.binary_dilation(dil)#blob labeling    tarlabel=ndi.label(mtrg)[0]    scelabel=ndi.label(msce)[0]#Calculating differences between target blobs and scene blobs    tarlb=numpy.amax(tarlabel)    scelb=numpy.amax(scelabel)    trshape=bintr.shape    scshape=binsc.shape    Edistsum=numpy.zeros((tarlb,scelb))    sceneboxes=[]    for v in range(1,tarlb+1):        sbox=[]        tblob=numpy.where(tarlabel==v)        boxt=(max(tblob[0]),min(tblob[0]),max(tblob[1]),min(tblob[1]))        tarblob=bintr[boxt[1]:(boxt[0]+1),boxt[3]:(boxt[2]+1)]        for w in range(1,scelb+1):            sblob=numpy.where(scelabel==w)            boxs=(max(sblob[0]),min(sblob[0]),max(sblob[1]),min(sblob[1]))            sbox.append(boxs)            scearr=binsc[boxs[1]:(boxs[0]+1),boxs[3]:(boxs[2]+1)].astype("uint8")            sceim=img.fromarray(scearr)            sceblob=numpy.array(sceim.resize((tarblob.shape[1],tarblob.shape[0]),img.ANTIALIAS))            diff=abs(sceblob-tarblob)            Edist=numpy.where(diff!=0)            Edistsum[v-1][w-1]=len(Edist[0])        sceneboxes.append(sbox)    Edistsum=numpy.array(Edistsum)#find right blobs    found=[]    for r in range(0,tarlb):        found.append(numpy.where(Edistsum[r]==min(Edistsum[r]))[0][0])    #draw box around target    vertbox=[]    horzbox=[]    for g in range(0,len(found)):        vertbox.append(sceneboxes[g][found[g]][0])        vertbox.append(sceneboxes[g][found[g]][1])        horzbox.append(sceneboxes[g][found[g]][2])        horzbox.append(sceneboxes[g][found[g]][3])    coords=[(min(horzbox),min(vertbox)),(max(horzbox),max(vertbox))]    midtar=(((coords[1][0]-coords[0][0])/2.0)+coords[0][0],((coords[1][1]-coords[0][1])/2.0)+coords[0][1])    midsce=(scshape[1]/2.0,scshape[0]/2.0)#draw rectangle around target    draw=imgd.Draw(scne)    draw.rectangle([(min(horzbox),min(vertbox)),(max(horzbox),max(vertbox))],outline="#00FF00")    draw.line((midtar[0],midtar[1],midsce[0],midsce[1]),fill=128)#calculate distance between center of scene and center of target found    movement=(midtar[0]-midsce[0],midtar[1]-midsce[1])    mplt.imshow(scne,origin="lower")    mplt.show()    return movement